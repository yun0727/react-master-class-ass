{"ast":null,"code":"var _jsxFileName = \"/Users/jeongyun/Desktop/\\u1111\\u1173\\u1105\\u1169\\u1100\\u1173\\u1105\\u1162\\u1106\\u1175\\u11BC/NOMAD CODERS/React JS \\u1106\\u1161\\u1109\\u1173\\u1110\\u1165 \\u110F\\u1173\\u11AF\\u1105\\u1162\\u1109\\u1173 2/nomad_todolist/src/components/CreateToDo.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from 'react-hook-form';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { categoryState, toDoState } from '../atoms';\nimport { WrapDiv, TodoForm, TodoInput, TodoBtn } from '../styled/styled.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateToDo = () => {\n  _s();\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n  const handleValid = _ref => {\n    let {\n      toDo\n    } = _ref;\n    setToDos(oldToDos => [{\n      text: toDo,\n      id: Date.now(),\n      category\n    }, ...oldToDos]);\n    setValue('toDo', '');\n  };\n  return /*#__PURE__*/_jsxDEV(WrapDiv, {\n    children: /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: handleSubmit(handleValid),\n      children: [/*#__PURE__*/_jsxDEV(TodoInput\n      // register 함수가 반환하는 객체를 가져다가 input에 props로 내용을 준다.\n      , {\n        ...register('toDo', {\n          required: 'Please write a To Do',\n          minLength: {\n            value: 5,\n            message: 'Your password is too short.'\n          }\n        }),\n        placeholder: \"\\uC624\\uB298\\uC758 \\uD560\\uC77C\\uC744 \\uC801\\uC5B4\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoBtn, {\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateToDo, \"yeTOTMnWAxCEgrg1XljkFZ1mlNw=\", false, function () {\n  return [useSetRecoilState, useRecoilValue, useForm];\n});\n_c = CreateToDo;\nexport default CreateToDo;\nvar _c;\n$RefreshReg$(_c, \"CreateToDo\");","map":{"version":3,"names":["useForm","useRecoilValue","useSetRecoilState","categoryState","toDoState","WrapDiv","TodoForm","TodoInput","TodoBtn","jsxDEV","_jsxDEV","CreateToDo","_s","setToDos","category","register","handleSubmit","setValue","handleValid","_ref","toDo","oldToDos","text","id","Date","now","children","onSubmit","required","minLength","value","message","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jeongyun/Desktop/프로그래밍/NOMAD CODERS/React JS 마스터 클래스 2/nomad_todolist/src/components/CreateToDo.tsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { categoryState, toDoState } from '../atoms';\n\nimport { WrapDiv, TodoForm, TodoInput, TodoBtn } from '../styled/styled.js';\n\ninterface IForm {\n  toDo: string;\n}\n\nconst CreateToDo = () => {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, id: Date.now(), category },\n      ...oldToDos,\n    ]);\n    setValue('toDo', '');\n  };\n\n  return (\n    <WrapDiv>\n      <TodoForm onSubmit={handleSubmit(handleValid)}>\n        <TodoInput\n          // register 함수가 반환하는 객체를 가져다가 input에 props로 내용을 준다.\n          {...register('toDo', {\n            required: 'Please write a To Do',\n            minLength: {\n              value: 5,\n              message: 'Your password is too short.',\n            },\n          })}\n          placeholder='오늘의 할일을 적어주세요'\n        />\n        <TodoBtn>등록</TodoBtn>\n      </TodoForm>\n    </WrapDiv>\n  );\n};\n\nexport default CreateToDo;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,QAAQ;AAC1D,SAASC,aAAa,EAAEC,SAAS,QAAQ,UAAU;AAEnD,SAASC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM5E,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGX,iBAAiB,CAACE,SAAS,CAAC;EAC7C,MAAMU,QAAQ,GAAGb,cAAc,CAACE,aAAa,CAAC;EAC9C,MAAM;IAAEY,QAAQ;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAGjB,OAAO,CAAQ,CAAC;EAE7D,MAAMkB,WAAW,GAAGC,IAAA,IAAqB;IAAA,IAApB;MAAEC;IAAY,CAAC,GAAAD,IAAA;IAClCN,QAAQ,CAAEQ,QAAQ,IAAK,CACrB;MAAEC,IAAI,EAAEF,IAAI;MAAEG,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEX;IAAS,CAAC,EACxC,GAAGO,QAAQ,CACZ,CAAC;IACFJ,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC;EACtB,CAAC;EAED,oBACEP,OAAA,CAACL,OAAO;IAAAqB,QAAA,eACNhB,OAAA,CAACJ,QAAQ;MAACqB,QAAQ,EAAEX,YAAY,CAACE,WAAW,CAAE;MAAAQ,QAAA,gBAC5ChB,OAAA,CAACH;MACC;MAAA;QAAA,GACIQ,QAAQ,CAAC,MAAM,EAAE;UACnBa,QAAQ,EAAE,sBAAsB;UAChCC,SAAS,EAAE;YACTC,KAAK,EAAE,CAAC;YACRC,OAAO,EAAE;UACX;QACF,CAAC,CAAC;QACFC,WAAW,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACF1B,OAAA,CAACF,OAAO;QAAAkB,QAAA,EAAC;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACxB,EAAA,CA/BID,UAAU;EAAA,QACGT,iBAAiB,EACjBD,cAAc,EACcD,OAAO;AAAA;AAAAqC,EAAA,GAHhD1B,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}