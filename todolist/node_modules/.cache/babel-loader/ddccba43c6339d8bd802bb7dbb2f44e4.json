{"ast":null,"code":"import { atom, selector } from 'recoil';\nimport { recoilPersist } from 'recoil-persist';\nconst {\n  persistAtom\n} = recoilPersist();\n\n// localStorage = https://www.npmjs.com/package/recoil-persist\n\n//type category = 'TO_DO' | 'DOING' | 'DONE';\n\nexport let Categories = /*#__PURE__*/function (Categories) {\n  Categories[\"TO_DO\"] = \"TO_DO\";\n  Categories[\"DOING\"] = \"DOING\";\n  Categories[\"DONE\"] = \"DONE\";\n  return Categories;\n}({});\nexport const categoryState = atom({\n  key: 'category',\n  default: Categories.TO_DO\n});\nexport const toDoState = atom({\n  key: 'toDo',\n  default: [],\n  effects_UNSTABLE: [persistAtom]\n});\nexport const toDoSelector = selector({\n  key: 'toDoSelector',\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n\n    //1차\n    // return [\n    //   toDos.filter((toDo) => toDo.category === 'TO_DO'),\n    //   toDos.filter((toDo) => toDo.category === 'DOING'),\n    //   toDos.filter((toDo) => toDo.category === 'DONE'),\n    // ];\n\n    //2차\n    // if (category === 'TO_DO')\n    //   return toDos.filter((toDo) => toDo.category === 'TO_DO');\n    // if (category === 'DOING')\n    //   return toDos.filter((toDo) => toDo.category === 'DOING');\n    // if (category === 'DONE')\n    //   return toDos.filter((toDo) => toDo.category === 'DONE');\n\n    return toDos.filter(toDo => toDo.category === category);\n  }\n});","map":{"version":3,"names":["atom","selector","recoilPersist","persistAtom","Categories","categoryState","key","default","TO_DO","toDoState","effects_UNSTABLE","toDoSelector","get","_ref","toDos","category","filter","toDo"],"sources":["/Users/jeongyun/Desktop/프로그래밍/NOMAD CODERS/React JS 마스터 클래스 2/nomad_todolist/src/atoms.tsx"],"sourcesContent":["import { atom, selector } from 'recoil';\nimport { recoilPersist } from 'recoil-persist';\n\nconst { persistAtom } = recoilPersist();\n\n// localStorage = https://www.npmjs.com/package/recoil-persist\n\n//type category = 'TO_DO' | 'DOING' | 'DONE';\n\nexport enum Categories {\n  'TO_DO' = 'TO_DO',\n  'DOING' = 'DOING',\n  'DONE' = 'DONE',\n}\n\nexport interface IToDo {\n  text: string;\n  category: Categories;\n  id: number;\n}\n\nexport const categoryState = atom<Categories>({\n  key: 'category',\n  default: Categories.TO_DO,\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: 'toDo',\n  default: [],\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const toDoSelector = selector({\n  key: 'toDoSelector',\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n\n    //1차\n    // return [\n    //   toDos.filter((toDo) => toDo.category === 'TO_DO'),\n    //   toDos.filter((toDo) => toDo.category === 'DOING'),\n    //   toDos.filter((toDo) => toDo.category === 'DONE'),\n    // ];\n\n    //2차\n    // if (category === 'TO_DO')\n    //   return toDos.filter((toDo) => toDo.category === 'TO_DO');\n    // if (category === 'DOING')\n    //   return toDos.filter((toDo) => toDo.category === 'DOING');\n    // if (category === 'DONE')\n    //   return toDos.filter((toDo) => toDo.category === 'DONE');\n\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,QAAQ;AACvC,SAASC,aAAa,QAAQ,gBAAgB;AAE9C,MAAM;EAAEC;AAAY,CAAC,GAAGD,aAAa,CAAC,CAAC;;AAEvC;;AAEA;;AAEA,WAAYE,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAYtB,OAAO,MAAMC,aAAa,GAAGL,IAAI,CAAa;EAC5CM,GAAG,EAAE,UAAU;EACfC,OAAO,EAAEH,UAAU,CAACI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGT,IAAI,CAAU;EACrCM,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,EAAE;EACXG,gBAAgB,EAAE,CAACP,WAAW;AAChC,CAAC,CAAC;AAEF,OAAO,MAAMQ,YAAY,GAAGV,QAAQ,CAAC;EACnCK,GAAG,EAAE,cAAc;EACnBM,GAAG,EAAEC,IAAA,IAAa;IAAA,IAAZ;MAAED;IAAI,CAAC,GAAAC,IAAA;IACX,MAAMC,KAAK,GAAGF,GAAG,CAACH,SAAS,CAAC;IAC5B,MAAMM,QAAQ,GAAGH,GAAG,CAACP,aAAa,CAAC;;IAEnC;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,OAAOS,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,QAAQ,KAAKA,QAAQ,CAAC;EAC3D;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}